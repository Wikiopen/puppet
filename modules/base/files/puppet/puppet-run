#!/bin/bash
set -e
set -u
FORCE=0
CHANGES=0

function log  {
    echo "$@"
}

function puppet_updates {
    cd /etc/puppet
    /usr/bin/git remote update
    LOCAL=$(/usr/bin/git rev-parse @)
    REMOTE=$(/usr/bin/git rev-parse @{u})
    if [ $LOCAL = $REMOTE ]; then
        CHANGES=0
    else
        CHANGES=1
    fi
}

function dns_updates {
    cd /etc/gdnsd
    /usr/bin/git remote update
    LOCAL=$(/usr/bin/git rev-parse @)
    REMOTE=$(/usr/bin/git rev-parse @{u})
    if [ $LOCAL = $REMOTE ]; then
        CHANGES=0
    else
        CHANGES=1
    fi
}

function mediawiki_updates {
    cd /srv/mediawiki/config
    /usr/bin/git remote update
    LOCAL=$(/usr/bin/git rev-parse @)
    REMOTE=$(/usr/bin/git rev-parse @{u})
    if [ $LOCAL = $REMOTE ]; then
        CHANGES=0
    else
        CHANGES=1
    fi
}

function parsoid_updates {
    cd /etc/mediawiki/parsoid
    /usr/bin/git remote update
    LOCAL=$(/usr/bin/git rev-parse @)
    REMOTE=$(/usr/bin/git rev-parse @{u})
    if [ $LOCAL = $REMOTE ]; then
        CHANGES=0
    else
        CHANGES=1
        parsoid_pull
    fi
}

function parsoid_pull {
    cd /etc/mediawiki/parsoid
    /usr/bin/git pull
}

function ssh_agent {
    if [[ -z $(ps -ef | grep ssh-agent | grep -v grep) ]]
    then
       log "ssh-agent is not running."
    else
       log "ssh-agent is running. Killing ssh-agent."
       /usr/bin/killall ssh-agent
    fi
}

function pull_private {
    ssh_agent
    eval `ssh-agent` && /usr/bin/ssh-add /root/id_rsa && cd /root/private && /usr/bin/git pull
}

function run_puppet {
    cd /etc/puppet
    /usr/bin/git pull
    /usr/bin/puppet apply /etc/puppet/manifests/site.pp -tv
}


function usage {
    echo "Usage: $0 [-f]"; exit 1;
}

while getopts "f" option; do
    case $option in
        f)
            FORCE=1
            ;;
        *)
            usage
            ;;
esac
done

if [ -d "/etc/gdnsd" ]; then
    dns_updates
elif [ -d "/srv/mediawiki" ]; then
    mediawiki_updates
elif [ -d "/etc/mediawiki/parsoid" ]; then
    parsoid_updates
fi

if [ $CHANGES -eq 0 ]; then
    puppet_updates
fi

if [ $CHANGES -eq 1 ]; then
    log "Changes exist!"
    pull_private
    run_puppet
elif [ $FORCE -eq 1 ]; then
    log "Forcing puppet run!"
    pull_private
    run_puppet
else
    log "No changes and no forced run!"
fi;
